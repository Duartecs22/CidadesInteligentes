name: CI/CD - ASP.NET Core

on:
  push:
    branches:
      - main  # Roda o pipeline quando houver push na branch main
  pull_request:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout do código
        uses: actions/checkout@v4

      - name: Configurar .NET 8
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0'

      - name: Restaurar pacotes
        run: dotnet restore

      - name: Build da aplicação
        run: dotnet build --configuration Release --no-restore

      - name: Rodar testes (se houver)
        run: dotnet test --configuration Release --no-build || echo "Nenhum teste configurado"

      - name: Login no Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Construir e enviar a imagem Docker
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/seguranca-publica-api:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/seguranca-publica-api:latest

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
      - name: Conectar ao servidor e atualizar o container
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << 'EOF'
            docker pull ${{ secrets.DOCKER_USERNAME }}/seguranca-publica-api:latest
            docker stop seguranca-publica-api || true
            docker rm seguranca-publica-api || true
            docker run -d --name seguranca-publica-api -p 5008:8080 --network segurancapublicaapi_seguranca-network ${{ secrets.DOCKER_USERNAME }}/seguranca-publica-api:latest
          EOF
